import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,d as a,o as r}from"./app-ROPDmvpc.js";const o={};function n(i,t){return r(),p("div",null,t[0]||(t[0]=[a('<h4 id="面向对象方法与统一建模语言" tabindex="-1"><a class="header-anchor" href="#面向对象方法与统一建模语言"><span>面向对象方法与统一建模语言</span></a></h4><p>现代面向对象分析和设计过程中都综合使用了用例建模、静态建模、状态机建模和对象交互建模。</p><p>用例建模：系统的功能性需求按照用例和参与者进行定义。</p><p>静态建模：提供系统的结构化视图。类按照其属性以及与其他类的关系进行定义。</p><p>对象交互建模：通过对象交互图显示对象之间是如何通信以实现用例。</p><p>状态机建模：通过状态图表示系统的相关状态及关系。</p><h4 id="方法和表示法" tabindex="-1"><a class="header-anchor" href="#方法和表示法"><span>方法和表示法</span></a></h4><p>软件设计表示法：使用图形或文本方式或同时使用图形和文本描述软件设计的方法。</p><p>软件设计思想：用于设计系统的根本性的思想。</p><p>软件设计策略：是一种对设计的整体性规划和方向性指导。</p><p>软件结构组织准则：用于帮助设计者将软件系统组织为构件的启发式规则或指导方针。</p><p>软件设计方法：是一种描述了用于在给定的应用系统软件需求基础上创建一个设计方案的步骤序列的系统化方法。</p><h4 id="软件体系结构的多视图" tabindex="-1"><a class="header-anchor" href="#软件体系结构的多视图"><span>软件体系结构的多视图</span></a></h4><ul><li>用例视图<br> 该视图是一种功能性需求视图，是软件体系结构设计的输入。每个用例描述了一个或多个参与者（外部用户）与系统之间的交互序列。</li><li>静态视图<br> 该视图用类以及类间关系描述体系结构，其中的关系包括关联、整体/部分（组合或聚合)、泛化/特化关系。表示为 UML 类图。</li><li>动态交互视图<br> 该视图通过对象以及对象间的消息通信来描述体系结构。该视图也可以用来描述特定场景的执行序列。表示为 UML 通信图。</li><li>动态状态机视图<br> 一个控制构件的内部控制和定序可以用状态机来描述。表示为 UML 状态图。</li><li>结构构件视图<br> 该视图用构件来描述软件体系结构，构件间通过端口互联，支持供给接口和请求接口的描述。表示为 UML 结构化类图。</li><li>动态并发视图<br> 该视图将软件体系结构描述为在分布式结点上执行并且通过消息进行通信的并发构件。表示为 UML 并发通信图。</li><li>部署视图<br> 该视图描述分布式体系结构中构件如何分配到不同硬件结点上的特定配置。表示为 UML 部署图。</li></ul>',14)]))}const s=e(o,[["render",n],["__file","软件建模与设计.html.vue"]]),m=JSON.parse('{"path":"/posts/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%BD%AF%E4%BB%B6%E5%BB%BA%E6%A8%A1%E4%B8%8E%E8%AE%BE%E8%AE%A1.html","title":"《软件建模与设计：UML、用例、模式和软件体系结构》笔记","lang":"zh-CN","frontmatter":{"title":"《软件建模与设计：UML、用例、模式和软件体系结构》笔记","date":"2023-12-11T00:00:00.000Z","category":"读书笔记","tag":"软件建模","description":"面向对象方法与统一建模语言 现代面向对象分析和设计过程中都综合使用了用例建模、静态建模、状态机建模和对象交互建模。 用例建模：系统的功能性需求按照用例和参与者进行定义。 静态建模：提供系统的结构化视图。类按照其属性以及与其他类的关系进行定义。 对象交互建模：通过对象交互图显示对象之间是如何通信以实现用例。 状态机建模：通过状态图表示系统的相关状态及关系...","head":[["meta",{"property":"og:url","content":"https://mioor.top/posts/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%BD%AF%E4%BB%B6%E5%BB%BA%E6%A8%A1%E4%B8%8E%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"MIOOR"}],["meta",{"property":"og:title","content":"《软件建模与设计：UML、用例、模式和软件体系结构》笔记"}],["meta",{"property":"og:description","content":"面向对象方法与统一建模语言 现代面向对象分析和设计过程中都综合使用了用例建模、静态建模、状态机建模和对象交互建模。 用例建模：系统的功能性需求按照用例和参与者进行定义。 静态建模：提供系统的结构化视图。类按照其属性以及与其他类的关系进行定义。 对象交互建模：通过对象交互图显示对象之间是如何通信以实现用例。 状态机建模：通过状态图表示系统的相关状态及关系..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T11:54:12.000Z"}],["meta",{"property":"article:author","content":"MIOOR"}],["meta",{"property":"article:tag","content":"软件建模"}],["meta",{"property":"article:published_time","content":"2023-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T11:54:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《软件建模与设计：UML、用例、模式和软件体系结构》笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-28T11:54:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MIOOR\\",\\"url\\":\\"http://mioor.top\\"}]}"]]},"headers":[],"git":{"createdTime":1730116452000,"updatedTime":1730116452000,"contributors":[{"name":"MIOOR","email":"yangwenyao07@gmail.com","commits":1}]},"readingTime":{"minutes":2.42,"words":727},"filePathRelative":"posts/读书笔记/软件建模与设计.md","localizedDate":"2023年12月11日","excerpt":"<h4>面向对象方法与统一建模语言</h4>\\n<p>现代面向对象分析和设计过程中都综合使用了用例建模、静态建模、状态机建模和对象交互建模。</p>\\n<p>用例建模：系统的功能性需求按照用例和参与者进行定义。</p>\\n<p>静态建模：提供系统的结构化视图。类按照其属性以及与其他类的关系进行定义。</p>\\n<p>对象交互建模：通过对象交互图显示对象之间是如何通信以实现用例。</p>\\n<p>状态机建模：通过状态图表示系统的相关状态及关系。</p>\\n<h4>方法和表示法</h4>\\n<p>软件设计表示法：使用图形或文本方式或同时使用图形和文本描述软件设计的方法。</p>\\n<p>软件设计思想：用于设计系统的根本性的思想。</p>","autoDesc":true}');export{s as comp,m as data};
